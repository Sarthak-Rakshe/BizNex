version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
      POSTGRES_DB: demo_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - mynetwork

  backend:
    image: backend
    container_name: backend
    environment:
      PORT: "8081"
      APP_BOOTSTRAP_ADMIN_PASSWORD: "Admin@123"
      APP_BOOTSTRAP_ADMIN_USER: "admin"
      DB_URL: "jdbc:postgresql://postgres:5432/demo_db"
      DB_USERNAME: "demo_user"
      DB_PASSWORD: "demo_pass"
      JWT_EXPIRATION: "3600000"
      JWT_REFRESH_EXPIRATION: "604600000"
      JWT_SECRET: "ZTg4NjllOTlkMTQ0NTU3Yjc3Zjk2YjliYmIwMmJmOTMxNDczNjE1ZDAzNGI3N2M4MDBkNWFjY2IzNzEyOTNlZQ=="
      CORS_ALLOWED_ORIGINS : "http://localhost:8090,http://frontend:80"
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  frontend:
    image: biznex-frontend
    container_name: frontend
    environment:
      VITE_API_URL: "http://localhost:8081"
    ports:
      - "8090:80"
    networks:
      - mynetwork
    depends_on:
      - backend

volumes:
  pgdata:

networks:
  mynetwork:
    driver: bridge
