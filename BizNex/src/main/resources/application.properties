spring.application.name=BizNex
server.port=${PORT:8081}

# Database configuration (values can be overridden via environment variables)
# Fallback defaults (after colon) are for local dev only. DO NOT rely on them in prod.
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Mitigate N+1 (batch size for collections / lazy many-to-one)
spring.jpa.properties.hibernate.default_batch_fetch_size=50

# JWT / Security (override in environment; NEVER commit real secrets)
app.security.jwt.secret=${JWT_SECRET}
app.security.jwt.expiration=${JWT_EXPIRATION}
security.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION}
logging.level.org.springframework.security=INFO

# CORS (comma separated). Each can be overridden via environment variables.
# Example overrides (Linux/macOS): export CORS_ALLOWED_ORIGINS="https://app.example.com,https://admin.example.com"
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type}
app.cors.exposed-headers=${CORS_EXPOSED_HEADERS:Authorization}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
app.cors.max-age=${CORS_MAX_AGE:3600}
